openapi: 3.0.1
info:
  title: Object management HTTP API for Analytics.
  description: |
    **Authentication is required** to access any of the
    following endpoints. Please see [Authorization](../../platform/getting_started.html)
    documentation for more details.
  version: auto
servers:
  - url: 'https://your-instance-name.piwik.pro/'
paths:
  /api/analytics/v1/manage/goals/:
    post:
      tags:
        - Goals
      summary: Create goal
      description: |
        Create a new goal.
        Please note that each request must be authenticated.
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/Goal'
      responses:
        '201':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/GoalDetails'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
    get:
      tags:
        - Goals
      summary: List goals
      description: |
        Returns a list all goals available for a website.
        Please note that each request must be authenticated.
      parameters:
        - $ref: '#/components/parameters/WebsiteId'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                  - meta
                properties:
                  meta:
                    type: object
                    allOf:
                      - $ref: '#/components/schemas/Meta'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/GoalDetails'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
  '/api/analytics/v1/manage/goals/{id}/':
    get:
      tags:
        - Goals
      summary: Get goal
      description: |
        Returns a definition of a specific goal.
        Please note that each request must be authenticated.
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/WebsiteId'
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/GoalDetails'
        '403':
          description: Forbidden
    put:
      tags:
        - Goals
      summary: Update goal
      description: |
        Update an existing goal.
        Please note that each request must be authenticated.
      parameters:
        - $ref: '#/components/parameters/Id'
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/Goal'
                    - properties:
                        id:
                          type: string
                          description: ID of a Goal.
                          format: uuid
                          readOnly: false
                          example: 677fe0d3-b4f7-43ed-852d-1a9e7b8e59fb
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/GoalDetails'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
    delete:
      tags:
        - Goals
      summary: Delete goal
      description: |
        Delete the specified goal.
        Please note that each request must be authenticated.
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/WebsiteId'
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/analytics/v1/manage/custom-dimensions/:
    post:
      tags:
        - Custom Dimensions
      summary: Create custom dimension
      description: |
        Configure new custom dimension.
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/CustomDimensionCreate'
        required: true
      responses:
        '201':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CustomDimensionDetail'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
    get:
      tags:
        - Custom Dimensions
      summary: List custom dimensions
      description: |
        Returns a list all custom dimensions available for a website.
      parameters:
        - $ref: '#/components/parameters/WebsiteId'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                  - meta
                properties:
                  meta:
                    type: object
                    allOf:
                      - $ref: '#/components/schemas/Meta'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomDimensionDetail'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
  '/api/analytics/v1/manage/custom-dimensions/{id}/':
    get:
      tags:
        - Custom Dimensions
      summary: Get custom dimension
      description: |
        Returns a definition of a specific custom dimension.
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/WebsiteId'
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CustomDimensionDetail'
        '403':
          description: Forbidden
    put:
      tags:
        - Custom Dimensions
      summary: Update custom dimension
      description: |
        Configure existing custom dimension.
      parameters:
        - $ref: '#/components/parameters/Id'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/CustomDimensionUpdate'
                  required:
                    - type
                    - attributes
                    - id
                  properties:
                    id:
                      type: string
                      description: ID of a annotation.
                      format: uuid
                      readOnly: false
                      example: 677fe0d3-b4f7-43ed-852d-1a9e7b8e59fb
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CustomDimensionDetail'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
  /api/analytics/v1/manage/custom-dimensions/slots/:
    get:
      tags:
        - Custom Dimensions
      summary: Get custom dimension slots
      description: |
        Returns statistics about available custom dimension slots.
      parameters:
        - $ref: '#/components/parameters/WebsiteId'
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/CustomDimensionSlots'
        '403':
          description: Forbidden
  /api/analytics/v1/manage/annotation/user/:
    post:
      tags:
        - User Annotations
      summary: Create user annotation
      description: |
        Create a new user annotation.
        Please note that each request must be authenticated.
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/AnnotationUser'
        required: true
      responses:
        '201':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/AnnotationUserDetails'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
    get:
      tags:
        - User Annotations
      summary: List user annotations
      description: |
        Returns a list all user annotations available for a website.
        Please note that each request must be authenticated.
      parameters:
        - $ref: '#/components/parameters/WebsiteId'
        - $ref: '#/components/parameters/DateFrom'
        - $ref: '#/components/parameters/DateTo'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                  - meta
                properties:
                  meta:
                    type: object
                    allOf:
                      - $ref: '#/components/schemas/Meta'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AnnotationUserDetails'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
  '/api/analytics/v1/manage/annotation/user/{id}/':
    get:
      tags:
        - User Annotations
      summary: Get user annotation
      description: |
        Returns a definition of a specific user annotation.
        Please note that each request must be authenticated.
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/WebsiteId'
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/AnnotationUserDetails'
        '403':
          description: Forbidden
    patch:
      tags:
        - User Annotations
      summary: Update user annotation
      description: |
        Update an existing user annotation.
        Please note that each request must be authenticated.
      parameters:
        - $ref: '#/components/parameters/Id'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/AnnotationUser'
                  required:
                    - type
                    - attributes
                    - id
                  properties:
                    id:
                      type: string
                      description: ID of a annotation.
                      format: uuid
                      readOnly: false
                      example: 677fe0d3-b4f7-43ed-852d-1a9e7b8e59fb
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/AnnotationUserDetails'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
    delete:
      tags:
        - User Annotations
      summary: Delete user annotation
      description: |
        Delete the specified user annotation.
        Please note that each request must be authenticated.
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/WebsiteId'
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/analytics/v1/manage/annotation/system/:
    get:
      tags:
        - System Annotations
      summary: List System Annotations
      description: |
        Returns a list all System Annotations available for a website.
        Please note that each request must be authenticated.
      parameters:
        - $ref: '#/components/parameters/DateFrom'
        - $ref: '#/components/parameters/DateTo'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - meta
                  - data
                properties:
                  meta:
                    type: object
                    allOf:
                      - $ref: '#/components/schemas/Meta'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AnnotationSystem'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
components:
  parameters:
    Id:
      name: id
      in: path
      description: ID of the object.
      required: true
      schema:
        type: string
        format: uuid
      example: dde2dc68-b6bb-45ee-9ac2-868b6181e33f
    WebsiteId:
      name: website_id
      in: query
      required: true
      description: ID of the website.
      schema:
        type: string
        format: uuid
      example: 677fe0d3-b4f7-43ed-852d-1a9e7b8e59fb
    DateFrom:
      name: date_from
      in: query
      description: |
        Start date for the query (inclusive). You can specify mulitple dates which will be paired with corresponding `date_to` parameters. For example `?date_from=2020-01-01&date_to=2020-01-10&date_from=2021-06-01&date_to=2021-07-01` will create two ranges: `[2020-01-01; 2020-01-10]` and `[2021-06-01; 2021-07-01]`.
        Number of `date_from` parameters must match number of `date_to` parameters.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          format: date
          example: '2021-05-01'
    DateTo:
      name: date_to
      in: query
      description: End date for the query (inclusive). You can specify mulitple dates which will be paired with corresponding `date_to` parameters. Read more in `date_from` parameter description.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          format: date
          example: '2021-05-01'
    Offset:
      name: offset
      in: query
      type: integer
      default: 0
      minimum: 0
      description: Number of rows to skip before beginning to return rows.
    Limit:
      name: limit
      in: query
      type: integer
      default: 10
      minimum: 1
      maximum: 100000
      description: Number of rows to return.
  schemas:
    Meta:
      type: object
      required:
        - total
      properties:
        total:
          type: integer
          description: Total number of results.
          example: 1
    Goal:
      type: object
      required:
        - type
        - attributes
        - id
      properties:
        type:
          type: string
          description: Type of the object.
          enum:
            - Goal
        id:
          type: string
          description: Id of a goal.
          readOnly: true
          format: uuid
          example: dde2dc68-b6bb-45ee-9ac2-868b6181e33f
        attributes:
          type: object
          required:
            - name
            - trigger
            - revenue
            - website_id
          properties:
            website_id:
              type: string
              format: uuid
              description: ID of the website.
              example: dde2dc68-b6bb-45ee-9ac2-868b6181e33f
            name:
              type: string
              description: Name of the goal.
              example: User entered contact page
            description:
              type: string
              description: Description of the goal.
              example: Goal is triggered when user enters contact page
            trigger:
              type: string
              enum:
                - url
                - title
                - event_name
                - event_category
                - event_action
                - file
                - external_website
                - manually
              description: Trigger for the goal.
              example: url
            pattern_type:
              type: string
              enum:
                - contains
                - exact
                - regex
              description: Condition operator for goal trigger. Required for non-manual triggers.
              example: contains
            pattern:
              type: string
              description: Condition value for goal trigger. Required for non-manual triggers.
              example: Contact
            allow_multiple:
              type: bool
              description: Specifies if goal can be converted more than once per visit.
              example: false
            case_sensitive:
              type: bool
              description: Specifies if goal can be converted more than once per visit.
              example: false
            revenue:
              type: string
              format: monetary
              description: Goal revenue value.
              example: '10.22'
    GoalDetails:
      type: object
      allOf:
        - $ref: '#/components/schemas/Goal'
      required:
        - type
        - attributes
      properties:
        attributes:
          required:
            - website_id
            - description
            - pattern_type
            - pattern
            - allow_multiple
            - case_sensitive
          properties:
            website_id:
              type: string
              format: uuid
              description: ID of the website.
              example: dde2dc68-b6bb-45ee-9ac2-868b6181e33f
    CustomDimension:
      type: object
      required:
        - type
        - attributes
        - id
      properties:
        type:
          type: string
          description: Type of the object.
          enum:
            - CustomDimension
        id:
          type: string
          description: ID of a Custom Dimension.
          readOnly: true
          format: uuid
          example: 677fe0d3-b4f7-43ed-852d-1a9e7b8e59fb
        attributes:
          required:
            - name
            - active
            - case_sensitive
            - scope
            - website_id
            - tracking_id
          properties:
            website_id:
              type: string
              format: uuid
              description: ID of the website.
              example: dde2dc68-b6bb-45ee-9ac2-868b6181e33f
            name:
              type: string
              description: Name of the custom dimension.
              example: Visitor hair color
            active:
              type: boolean
              description: Specifies if custom dimension is active or not.
            case_sensitive:
              type: boolean
              description: Specifies if custom dimension is case sensitive or not.
            tracking_id:
              type: integer
              description: Tracking id of custom dimension.
              minimum: 1
              readOnly: true
            extractions:
              type: array
              items:
                type: object
                properties:
                  target:
                    type: string
                    description: What value should be extracted.
                    enum:
                      - page_title_regex
                      - page_url_regex
                      - page_query_parameter
                  pattern:
                    type: string
                    description: Pattern for regexes or exact match on query param.
                    example: /foo/(.*)/bar
    CustomDimensionCreate:
      type: object
      allOf:
        - $ref: '#/components/schemas/CustomDimension'
        - type: object
          properties:
            attributes:
              type: object
              required:
                - scope
                - slot
              properties:
                scope:
                  type: string
                  description: Scope in which custom dimension is set.
                  enum:
                    - session
                    - event
                  readOnly: false
                slot:
                  type: integer
                  description: Slot number for custom dimension.
                  minimum: 1
                  readOnly: true
    CustomDimensionDetail:
      type: object
      allOf:
        - $ref: '#/components/schemas/CustomDimension'
        - type: object
          properties:
            attributes:
              type: object
              required:
                - scope
                - slot
              properties:
                scope:
                  type: string
                  description: Scope in which custom dimension is set.
                  enum:
                    - session
                    - event
                  readOnly: true
                slot:
                  type: integer
                  description: Slot number for custom dimension.
                  minimum: 1
                  readOnly: true
    CustomDimensionUpdate:
      type: object
      allOf:
        - $ref: '#/components/schemas/CustomDimension'
        - type: object
          properties:
            attributes:
              type: object
              required:
                - scope
              properties:
                scope:
                  type: string
                  description: Scope in which custom dimension is set.
                  enum:
                    - session
                    - event
                  readOnly: false
                slot:
                  type: integer
                  description: Slot number for custom dimension.
                  minimum: 1
                  readOnly: false
    CustomDimensionSlot:
      type: object
      description: Describes number of used/available/left slots in a context of session or event.
      properties:
        available:
          type: integer
        used:
          type: integer
        left:
          type: integer
    CustomDimensionSlots:
      type: object
      properties:
        type:
          type: string
          description: Type of the object.
          enum:
            - CustomDimensionSlots
        id:
          type: string
          readOnly: true
          format: uuid
          description: ID of the website.
          example: dde2dc68-b6bb-45ee-9ac2-868b6181e33f
        attributes:
          properties:
            event:
              $ref: '#/components/schemas/CustomDimensionSlot'
            session:
              $ref: '#/components/schemas/CustomDimensionSlot'
    Annotation:
      type: object
      properties:
        date:
          description: Date of the annotation.
          type: string
          example: '2021-05-01'
        content:
          description: Content of the annotation.
          type: string
          maxLength: 150
          example: Launch of a new campaign!
    AnnotationUser:
      type: object
      required:
        - type
        - attributes
        - id
      properties:
        type:
          type: string
          description: Type of the object.
          enum:
            - UserAnnotation
        id:
          type: string
          description: ID of a annotation.
          format: uuid
          readOnly: true
          example: 677fe0d3-b4f7-43ed-852d-1a9e7b8e59fb
        attributes:
          type: object
          allOf:
            - $ref: '#/components/schemas/Annotation'
          required:
            - content
            - website_id
            - date
          properties:
            visibility:
              enum:
                - private
                - public
              default: private
              description: |
                Determines whether the annotation should be visible only to the author or to everyone with access to the website.
              type: string
            website_id:
              description: ID of the website.
              type: string
              format: uuid
              example: dde2dc68-b6bb-45ee-9ac2-868b6181e33f
    AnnotationUserDetails:
      type: object
      allOf:
        - $ref: '#/components/schemas/AnnotationUser'
      required:
        - type
        - attributes
      properties:
        attributes:
          required:
            - content
            - website_id
            - date
            - is_author
            - author
            - visibility
          properties:
            website_id:
              type: string
              format: uuid
              description: ID of the website.
              example: dde2dc68-b6bb-45ee-9ac2-868b6181e33f
            author:
              type: object
              description: Author of the object.
              properties:
                email:
                  type: string
                  description: Email address of the author.
                  example: foo@bar.com
              required:
                - email
              readOnly: true
            is_author:
              type: boolean
              description: Flag that says whether the current user is the author.
              readOnly: true
    AnnotationSystem:
      type: object
      required:
        - type
        - attributes
        - id
      properties:
        type:
          type: string
          description: Type of the object.
          enum:
            - SystemAnnotation
        id:
          type: string
          description: ID of a annotation.
          readOnly: true
          format: uuid
          example: 677fe0d3-b4f7-43ed-852d-1a9e7b8e59fb
        attributes:
          required:
            - content
            - id
            - date
          allOf:
            - $ref: '#/components/schemas/Annotation'
