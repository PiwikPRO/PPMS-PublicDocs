swagger: '2.0'
info:
  title: Users Api
  version: auto

host: example.piwik.pro
schemes: [ https ]

paths:
  /api/users/v2/invite:
    post:
      summary: Invite user
      operationId: api_users_invited_v2
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: user data
          required: true
          schema:
            $ref: '#/definitions/JsonApi_User_Invite'
      responses:
        201:
          description: Created
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    $ref: '#/definitions/JsonApi_Id'
                  type:
                    $ref: '#/definitions/JsonApi_Type'
                  attributes:
                    type: object
                    properties:
                      email:
                        $ref: '#/definitions/User_Email'
                      role:
                        $ref: '#/definitions/User_Role'
                      addedAt:
                        $ref: '#/definitions/Date'
                      language:
                        $ref: '#/definitions/Language'
        400:
          $ref: '#/responses/Bad_Request'
        403:
          $ref: '#/responses/Forbidden'
  /api/users/v2:
    post:
      summary: Create user
      operationId: api_users_add_v2
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: user data
          required: true
          schema:
            $ref: '#/definitions/JsonApi_User_Create'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/JsonApi_User_Object'
        400:
          $ref: '#/responses/Bad_Request'
        403:
          $ref: '#/responses/Forbidden'
    get:
      summary: Get users list
      operationId: api_users_list_v2
      parameters:
        - $ref: '#/parameters/Offset'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/search_query'
        - $ref: '#/parameters/sort'
        - $ref: '#/parameters/search'
      produces:
        - application/vnd.api+json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/ListMetadata'
              data:
                type: array
                items:
                  $ref: '#/definitions/JsonApi_User'

  /api/users/v2/{userId}:
    parameters:
      - name: userId
        in: path
        type: string
        format: uuid
        required: true

    get:
      summary: Get details of an user
      operationId: api_users_user_details_v2
      produces:
        - application/vnd.api+json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/JsonApi_User_Object'

    delete:
      summary: Delete user
      operationId: api_users_delete_v2
      responses:
        204:
          $ref: '#/responses/No_Content'
        400:
          $ref: '#/responses/Bad_Request'
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/Not_Found'

    patch:
      summary: Edit user
      operationId: api_users_edit_v2
      consumes:
        - application/vnd.api+json
      parameters:
        - name: User with values to edit
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApi_Edit_User'
      responses:
        204:
          $ref: '#/responses/No_Content'
        400:
          $ref: '#/responses/Bad_Request'
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/Not_Found'

  /api/users/v2/{userId}/change-role:
    parameters:
      - name: userId
        in: path
        type: string
        format: uuid
        required: true

    patch:
      summary: Change user role
      operationId: api_users_change_role_v2
      consumes:
        - application/vnd.api+json
      parameters:
        - name: User with role
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApi_Change_Role'
      responses:
        204:
          $ref: '#/responses/No_Content'
        400:
          $ref: '#/responses/Bad_Request'
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/Not_Found'

  /api/users/v2/me/change-password:
    patch:
      summary: Change my password
      operationId: api_users_me_change_password_v2
      consumes:
        - application/json
      parameters:
        - name: User with new password
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApi_Change_Password'
      responses:
        204:
          $ref: '#/responses/No_Content'
        400:
          $ref: '#/responses/Bad_Request'
        404:
          $ref: '#/responses/Not_Found'

  /api/users/v2/me/details:
    get:
      deprecated: true
      description: Use GET /api/users/v2/me
      summary: Current user details
      operationId: deprecated_api_user_details_v2
      produces:
        - application/vnd.api+json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/JsonApi_User'

  /api/users/v2/me:
    get:
      summary: Current user details
      operationId: api_users_me_details_v2
      produces:
        - application/vnd.api+json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/JsonApi_User'

    patch:
      summary: Edit own account
      operationId: api_users_me_edit_v2
      consumes:
        - application/vnd.api+json
      parameters:
        - name: User with values to edit
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApi_Edit_User'
      responses:
        204:
          $ref: '#/responses/No_Content'
        400:
          $ref: '#/responses/Bad_Request'
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/Not_Found'

parameters:
  Offset:
    in: query
    name: offset
    description: Sets offset for list of items
    default: 0
    type: integer
    minimum: 0
    required: false

  Limit:
    in: query
    name: limit
    description: Limits the number of returned items
    type: integer
    default: 10
    minimum: 0
    maximum: 1000
    required: false

  search:
    name: search
    in: query
    description: User search query
    required: false
    type: string
    default: ''

  search_query:
    name: search_query
    in: query
    description: (deprecated) Use `search` param instead
    type: string
    required: false
    default: ''

  sort:
    in: query
    name: sort
    description: Sort field - can be reversed by adding dash before field name e.g (-email)
    type: string
    default: -addedAt
    required: false
    enum:
      - email
      - addedAt
      - role
      - -email
      - -addedAt
      - -role

definitions:
  User_Role:
    type: string
    description: User role
    example: USER
    enum: [ OWNER, USER ]

  User_Email:
    type: string
    description: Valid user email
    format: email
    example: john@doe.com

  User_Organization:
    type: string
    example: organization_name

  User_Password:
    type: string
    description: Valid password (it must contain at least one digit, one uppercase and one lowercase letter)
    example: Secret1337

  Date:
    type: string
    format: 'date-time'
    description: Datetime with time zone in ISO-8601 format
    example: '2018-06-25T07:28:52+01:00'

  Language:
    type: string
    format: 'IETF-language-tag'
    description: User Interface language with IETF language tag format
    example: 'en-US'

  JsonApi_Id:
    type: string
    format: uuid
    description: Resource ID
    example: 985ed9d7-b652-47b8-b9cf-c17d62735261

  JsonApi_Type:
    type: string
    description: Resource type, unique across whole PPAS
    example: ppms/user

  JsonApi_User_Type:
    type: string
    enum: [ ppms/user ]
    description: PPAS user resource type

  JsonApi_Resource_Object:
    type: object
    properties:
      id:
        $ref: '#/definitions/JsonApi_Id'
      type:
        $ref: '#/definitions/JsonApi_Type'
      attributes:
        type: object

  JsonApi_User:
    allOf:
      - $ref: '#/definitions/JsonApi_Resource_Object'
      - properties:
          type:
            allOf:
              - $ref: '#/definitions/JsonApi_User_Type'
          attributes:
            type: object
            properties:
              email:
                $ref: '#/definitions/User_Email'
              role:
                $ref: '#/definitions/User_Role'
              organization:
                $ref: '#/definitions/User_Organization'
              addedAt:
                $ref: '#/definitions/Date'
              language:
                $ref: '#/definitions/Language'

  JsonApi_User_Object:
    type: object
    properties:
      data:
        $ref: '#/definitions/JsonApi_User'

  JsonApi_User_Create:
    type: object
    required:
      - data
    properties:
      data:
        type: object
        required:
          - type
          - attributes
        properties:
          type:
            type: string
            enum: [ ppms/user ]
            description: Resource type, unique across whole PPAS
          attributes:
            type: object
            properties:
              password:
                $ref: '#/definitions/User_Password'
              email:
                $ref: '#/definitions/User_Email'
              role:
                allOf:
                  - $ref: '#/definitions/User_Role'
                default: USER
              language:
                $ref: '#/definitions/Language'
            required:
              - email
              - password

  JsonApi_User_Invite:
    type: object
    required:
      - data
    properties:
      data:
        type: object
        required:
          - type
          - attributes
        properties:
          type:
            type: string
            enum: [ ppms/user ]
            description: Resource type, unique across whole PPAS
          attributes:
            type: object
            properties:
              email:
                $ref: '#/definitions/User_Email'
              language:
                $ref: '#/definitions/Language'
            required:
              - email
              - language

  JsonApi_Edit_User:
    type: object
    required:
      - data
    properties:
      data:
        type: object
        allOf:
          - $ref: '#/definitions/JsonApi_Resource_Object'
          - properties:
              type:
                allOf:
                  - $ref: '#/definitions/JsonApi_User_Type'
              attributes:
                type: object
                properties:
                  role:
                    $ref: '#/definitions/User_Role'
                  language:
                    $ref: '#/definitions/Language'

  JsonApi_Change_Role:
    type: object
    required:
      - data
    properties:
      data:
        type: object
        allOf:
          - $ref: '#/definitions/JsonApi_Resource_Object'
          - properties:
              type:
                allOf:
                  - $ref: '#/definitions/JsonApi_User_Type'
              attributes:
                type: object
                properties:
                  role:
                    $ref: '#/definitions/User_Role'
                required:
                  - role

  JsonApi_Change_Password:
    type: object
    required:
      - data
    properties:
      data:
        type: object
        allOf:
          - $ref: '#/definitions/JsonApi_Resource_Object'
          - properties:
              type:
                allOf:
                  - $ref: '#/definitions/JsonApi_User_Type'
              attributes:
                type: object
                properties:
                  currentPassword:
                    allOf:
                      - description: Current password of given user
                      - $ref: '#/definitions/User_Password'
                  newPassword:
                    $ref: '#/definitions/User_Password'

  ListMetadata:
    type: object
    description: Metadata of a listing
    required:
      - total
    properties:
      total:
        type: integer
        description: Total number of items
        example: 1

responses:
  Bad_Request:
    description: Bad Request
  Forbidden:
    description: Forbidden
  Not_Found:
    description: Not Found
  No_Content:
    description: No content
