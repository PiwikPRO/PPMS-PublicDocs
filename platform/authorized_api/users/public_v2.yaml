openapi: 3.0.3
info:
  version: auto
  title: Users API
servers:
  - url: https://example.piwik.pro
paths:
  /api/users/v2/invite:
    post:
      summary: Invite user
      operationId: api_users_invited_v2
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/JsonApi_User_Invite'
      responses:
        201:
          description: Created
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        $ref: '#/components/schemas/JsonApi_Id'
                      type:
                        $ref: '#/components/schemas/JsonApi_Type'
                      attributes:
                        type: object
                        properties:
                          email:
                            $ref: '#/components/schemas/User_Email'
                          role:
                            $ref: '#/components/schemas/User_Role'
                          addedAt:
                            $ref: '#/components/schemas/Date'
                          language:
                            $ref: '#/components/schemas/Language'
        400:
          description: Bad Request
          content:
            application/vnd.api+json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorObject"
              examples:
                User already exists:
                  $ref: "#/components/examples/user_already_exists"
                Unsupported language:
                  $ref: "#/components/examples/unsupported_language"
                Unsupported language tag:
                  $ref: "#/components/examples/unsupported_language_tag"
                Unsupported language region:
                  $ref: "#/components/examples/unsupported_language_region"
                Email should not be blank:
                  $ref: "#/components/examples/email_should_not_be_blank"
                Email invalid value:
                  $ref: "#/components/examples/email_invalid_value"
                Email invalid type:
                  $ref: "#/components/examples/email_invalid_type"
                Invalid JSON API resource type:
                  $ref: "#/components/examples/invalid_json_api_type"
                Invalid content type:
                  $ref: "#/components/examples/invalid_content_type"
                Invalid JSON API content:
                  $ref: "#/components/examples/invalid_json_api_content"
                Invalid attributes:
                  $ref: "#/components/examples/invalid_attributes"
        403:
          $ref: '#/components/responses/Forbidden'

  /api/users/v2:
    post:
      deprecated: true
      description: |
        Please use <a href="#operation/api_users_invited_v2">Invite user</a> instead.<br><br>
        It adds user.
      summary: Create user
      operationId: api_users_add_v2
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/JsonApi_User_Create'
      responses:
        201:
          description: Created
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JsonApi_User_Object'
        400:
          description: Bad Request
          content:
            application/vnd.api+json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorObject"
              examples:
                User already exists:
                  $ref: "#/components/examples/user_already_exists"
                Unsupported language:
                  $ref: "#/components/examples/unsupported_language"
                Unsupported language tag:
                  $ref: "#/components/examples/unsupported_language_tag"
                Unsupported language region:
                  $ref: "#/components/examples/unsupported_language_region"
                Email should not be blank:
                  $ref: "#/components/examples/email_should_not_be_blank"
                Email invalid value:
                  $ref: "#/components/examples/email_invalid_value"
                Email invalid type:
                  $ref: "#/components/examples/email_invalid_type"
                Invalid password policy:
                  $ref: "#/components/examples/invalid_password_policy"
                Invalid role:
                  $ref: "#/components/examples/invalid_role"
                Invalid JSON API resource type:
                  $ref: "#/components/examples/invalid_json_api_type"
                Invalid content type:
                  $ref: "#/components/examples/invalid_content_type"
                Invalid JSON API content:
                  $ref: "#/components/examples/invalid_json_api_content"
                Invalid attributes:
                  $ref: "#/components/examples/invalid_attributes"
        403:
          $ref: '#/components/responses/Forbidden'
    get:
      summary: Get users list
      operationId: api_users_list_v2
      parameters:
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/search_query'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
      responses:
        200:
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/ListMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/JsonApi_User'
        400:
          description: Bad Request
          content:
            application/vnd.api+json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorObject"
              examples:
                Invalid offset:
                  $ref: "#/components/examples/invalid_offset"
                Invalid limit:
                  $ref: "#/components/examples/invalid_limit"
                Invalid limit over:
                  $ref: "#/components/examples/invalid_limit_over"
                Invalid sort:
                  $ref: "#/components/examples/invalid_sort"
        403:
          $ref: '#/components/responses/Forbidden'

  /api/users/v2/{userId}:
    get:
      summary: Get details of an user
      operationId: api_users_user_details_v2
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JsonApi_User_Object'
        400:
          description: Bad Request
          content:
            application/vnd.api+json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorObject"
              examples:
                Invalid UUID:
                  $ref: "#/components/examples/invalid_uuid"
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/Not_Found'

    delete:
      summary: Delete user
      operationId: api_users_delete_v2
      responses:
        204:
          $ref: '#/components/schemas/No_Content'
        400:
          description: Bad Request
          content:
            application/vnd.api+json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorObject"
              examples:
                Invalid UUID:
                  $ref: "#/components/examples/invalid_uuid"
                Cannot delete last owner:
                  $ref: "#/components/examples/cannot_delete_last_owner"
                Cannot delete own account:
                  $ref: "#/components/examples/cannot_delete_own_account"
        403:
          description: Forbidden
          content:
            application/vnd.api+json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorObject"
              examples:
                Forbidden:
                  $ref: "#/components/examples/forbidden"
        404:
          $ref: '#/components/responses/Not_Found'
        409:
          $ref: "#/components/responses/id_mismatch"
    patch:
      summary: Edit user
      operationId: api_users_edit_v2
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/JsonApi_Edit_User'
      responses:
        204:
          $ref: '#/components/schemas/No_Content'
        400:
          description: Bad Request
          content:
            application/vnd.api+json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorObject"
              examples:
                Invalid UUID:
                  $ref: "#/components/examples/invalid_uuid"
                Cannot change own role:
                  $ref: "#/components/examples/cannot_change_own_role"
                Unsupported language:
                  $ref: "#/components/examples/unsupported_language"
                Unsupported language tag:
                  $ref: "#/components/examples/unsupported_language_tag"
                Unsupported language region:
                  $ref: "#/components/examples/unsupported_language_region"
                Invalid role:
                  $ref: "#/components/examples/invalid_role"
                Invalid JSON API resource type:
                  $ref: "#/components/examples/invalid_json_api_type"
                JSON API id not provided:
                  $ref: "#/components/examples/json_api_id_not_provided"
                Invalid content type:
                  $ref: "#/components/examples/invalid_content_type"
                Invalid JSON API content:
                  $ref: "#/components/examples/invalid_json_api_content"
                Invalid attributes:
                  $ref: "#/components/examples/invalid_attributes"
        403:
          description: Forbidden
          content:
            application/vnd.api+json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorObject"
              examples:
                Forbidden:
                  $ref: "#/components/examples/forbidden"
        404:
          $ref: '#/components/responses/Not_Found'
        409:
          $ref: "#/components/responses/id_mismatch"
  /api/users/v2/{userId}/change-role:
    patch:
      summary: Change user role
      operationId: api_users_change_role_v2
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/JsonApi_Change_Role'
      responses:
        204:
          $ref: '#/components/schemas/No_Content'
        400:
          description: Bad Request
          content:
            application/vnd.api+json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorObject"
              examples:
                Invalid UUID:
                  $ref: "#/components/examples/invalid_uuid"
                Cannot change own role:
                  $ref: "#/components/examples/cannot_change_own_role"
                Invalid role:
                  $ref: "#/components/examples/invalid_role"
                Invalid JSON API resource type:
                  $ref: "#/components/examples/invalid_json_api_type"
                JSON API id not provided:
                  $ref: "#/components/examples/json_api_id_not_provided"
                Invalid content type:
                  $ref: "#/components/examples/invalid_content_type"
                Invalid JSON API content:
                  $ref: "#/components/examples/invalid_json_api_content"
                Invalid attributes:
                  $ref: "#/components/examples/invalid_attributes"
        403:
          description: Forbidden
          content:
            application/vnd.api+json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorObject"
              examples:
                Forbidden:
                  $ref: "#/components/examples/forbidden"
        404:
          $ref: '#/components/responses/Not_Found'
        409:
          $ref: "#/components/responses/id_mismatch"

  /api/users/v2/me/change-password:
    patch:
      summary: Change my password
      operationId: api_users_me_change_password_v2
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/JsonApi_Change_Password'
      responses:
        204:
          $ref: '#/components/schemas/No_Content'
        400:
          description: Bad Request
          content:
            application/vnd.api+json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorObject"
              examples:
                Invalid current password:
                  $ref: "#/components/examples/invalid_current_password"
                Invalid current password type:
                  $ref: "#/components/examples/invalid_current_password_type"
                Invalid new password:
                  $ref: "#/components/examples/invalid_new_password"
                Invalid JSON API resource type:
                  $ref: "#/components/examples/invalid_json_api_type"
                JSON API id not provided:
                  $ref: "#/components/examples/json_api_id_not_provided"
                Invalid content type:
                  $ref: "#/components/examples/invalid_content_type"
                Invalid JSON API content:
                  $ref: "#/components/examples/invalid_json_api_content"
                Invalid attributes:
                  $ref: "#/components/examples/invalid_attributes"
        404:
          $ref: '#/components/responses/Not_Found'
        409:
          $ref: "#/components/responses/id_mismatch"

  /api/users/v2/me/details:
    get:
      deprecated: true
      description: |
        Please use <a href="#operation/api_users_me_details_v2">Current user details</a> instead.<br><br>
        It gets current user details.
      summary: Current user details
      operationId: deprecated_api_user_details_v2
      responses:
        200:
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/JsonApi_User'

  /api/users/v2/me:
    get:
      summary: Current user details
      operationId: api_users_me_details_v2
      responses:
        200:
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/JsonApi_User'

    patch:
      summary: Edit own account
      operationId: api_users_me_edit_v2
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/JsonApi_Edit_User'
      responses:
        204:
          $ref: '#/components/schemas/No_Content'
        400:
          description: Bad Request
          content:
            application/vnd.api+json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorObject"
              examples:
                Cannot change own role:
                  $ref: "#/components/examples/cannot_change_own_role"
                Unsupported language:
                  $ref: "#/components/examples/unsupported_language"
                Unsupported language tag:
                  $ref: "#/components/examples/unsupported_language_tag"
                Unsupported language region:
                  $ref: "#/components/examples/unsupported_language_region"
                Invalid role:
                  $ref: "#/components/examples/invalid_role"
                Invalid JSON API resource type:
                  $ref: "#/components/examples/invalid_json_api_type"
                JSON API id not provided:
                  $ref: "#/components/examples/json_api_id_not_provided"
                Invalid content type:
                  $ref: "#/components/examples/invalid_content_type"
                Invalid JSON API content:
                  $ref: "#/components/examples/invalid_json_api_content"
                Invalid attributes:
                  $ref: "#/components/examples/invalid_attributes"
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/Not_Found'
        409:
          $ref: "#/components/responses/id_mismatch"
components:
  parameters:
    Offset:
      in: query
      name: offset
      description: Sets offset for list of items
      schema:
        type: integer
        minimum: 0
        default: 0
      required: false

    Limit:
      in: query
      name: limit
      description: Limits the number of returned items
      schema:
        type: integer
        default: 10
        minimum: 0
        maximum: 1000
      required: false

    search:
      name: search
      in: query
      description: User search query. You can search by email or id.
      required: false
      schema:
        type: string
        default: ''

    search_query:
      name: search_query
      in: query
      description: (deprecated) Use `search` param instead
      schema:
        type: string
        default: ''
      required: false

    sort:
      in: query
      name: sort
      description: Sort field - can be reversed by adding dash before field name e.g (-email)
      schema:
        type: string
        default: -addedAt
        enum:
          - email
          - addedAt
          - role
          - -email
          - -addedAt
          - -role
      required: false

  schemas:
    User_Role:
      type: string
      description: User role
      example: USER
      enum: [ OWNER, USER ]

    User_Email:
      type: string
      description: Valid user email
      format: email
      example: john@doe.com

    User_Organization:
      type: string
      example: organization_name

    User_Password:
      type: string
      description: Valid password (length between 8 and 128 chars, it must contain at least one digit, one uppercase and one lowercase letter)
      example: Secret1337

    Date:
      type: string
      format: 'date-time'
      description: Datetime with time zone in ISO-8601 format
      example: '2018-06-25T07:28:52+01:00'

    Language:
      type: string
      format: 'IETF-language-tag'
      description: User Interface language with IETF language tag format
      example: 'en-US'
      default: 'en-US'

    JsonApi_Id:
      type: string
      format: uuid
      description: Resource ID
      example: 985ed9d7-b652-47b8-b9cf-c17d62735261

    JsonApi_Type:
      type: string
      description: Resource type, unique across whole PPAS
      example: ppms/user

    JsonApi_User_Type:
      type: string
      enum: [ ppms/user ]
      description: PPAS user resource type

    JsonApi_Resource_Object:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/JsonApi_Id'
        type:
          $ref: '#/components/schemas/JsonApi_Type'
        attributes:
          type: object

    JsonApi_User:
      allOf:
        - $ref: '#/components/schemas/JsonApi_Resource_Object'
        - properties:
            type:
              allOf:
                - $ref: '#/components/schemas/JsonApi_User_Type'
            attributes:
              type: object
              properties:
                email:
                  $ref: '#/components/schemas/User_Email'
                role:
                  $ref: '#/components/schemas/User_Role'
                organization:
                  $ref: '#/components/schemas/User_Organization'
                addedAt:
                  $ref: '#/components/schemas/Date'
                language:
                  $ref: '#/components/schemas/Language'

    JsonApi_User_Object:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/JsonApi_User'

    JsonApi_User_Create:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - attributes
          properties:
            type:
              type: string
              enum: [ ppms/user ]
              description: Resource type, unique across whole PPAS
            attributes:
              type: object
              properties:
                password:
                  $ref: '#/components/schemas/User_Password'
                email:
                  $ref: '#/components/schemas/User_Email'
                role:
                  allOf:
                    - $ref: '#/components/schemas/User_Role'
                  default: USER
                language:
                  $ref: '#/components/schemas/Language'
              required:
                - email
                - password

    JsonApi_User_Invite:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              type: string
              enum: [ ppms/user ]
              description: Resource type, unique across whole PPAS
            attributes:
              type: object
              properties:
                email:
                  $ref: '#/components/schemas/User_Email'
                language:
                  $ref: '#/components/schemas/Language'
              required:
                - email

    JsonApi_Edit_User:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          allOf:
            - $ref: '#/components/schemas/JsonApi_Resource_Object'
            - properties:
                type:
                  allOf:
                    - $ref: '#/components/schemas/JsonApi_User_Type'
                attributes:
                  type: object
                  properties:
                    role:
                      $ref: '#/components/schemas/User_Role'
                    language:
                      $ref: '#/components/schemas/Language'

    JsonApi_Change_Role:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          allOf:
            - $ref: '#/components/schemas/JsonApi_Resource_Object'
            - properties:
                type:
                  allOf:
                    - $ref: '#/components/schemas/JsonApi_User_Type'
                attributes:
                  type: object
                  properties:
                    role:
                      $ref: '#/components/schemas/User_Role'
                  required:
                    - role

    JsonApi_Change_Password:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          allOf:
            - $ref: '#/components/schemas/JsonApi_Resource_Object'
            - properties:
                type:
                  allOf:
                    - $ref: '#/components/schemas/JsonApi_User_Type'
                attributes:
                  type: object
                  properties:
                    currentPassword:
                      allOf:
                        - description: Current password of given user
                        - $ref: '#/components/schemas/User_Password'
                    newPassword:
                      $ref: '#/components/schemas/User_Password'

    ListMetadata:
      type: object
      description: Metadata of a listing
      required:
        - total
      properties:
        total:
          type: integer
          description: Total number of items
          example: 1

    No_Content:
      description: No content

    ErrorObject:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - status
              - title
            properties:
              status:
                type: string
                description: the HTTP status code applicable to this problem, expressed as a
                  string value
                example: "400"
              code:
                type: string
                description: an application-specific error code, expressed as a string value
                example: error.default
              title:
                type: string
                description: >
                  a short, human-readable summary of the problem that SHOULD NOT
                  change from occurrence to occurrence of the problem, except for
                  purposes of localization
                example: Invalid form
              detail:
                type: string
                description: >
                  a human-readable explanation specific to this occurrence of the
                  problem. Like `title`, this field’s value can be localized
                example: This field is invalid
              source:
                type: object
                description: >
                  an object containing references to the source of the error,
                  optionally including any of the following members: [pointer,
                  parameter]
                properties:
                  pointer:
                    type: string
                    example: /data/attributes/name
                    description: >
                      a JSON Pointer [RFC6901] to the associated entity in the request
                      document [e.g. "/data" for a primary data object, or
                      "/data/attributes/name" for a specific attribute]
                  parameter:
                    type: string
                    example: offset
                    description: a string indicating which URI query parameter caused the error

  responses:
    Forbidden:
      description: Forbidden
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ErrorObject"
          examples:
            Forbidden:
              $ref: "#/components/examples/forbidden"
    id_mismatch:
        description: Conflict
        content:
            application/vnd.api+json:
                schema:
                    allOf:
                        -   $ref: "#/components/schemas/ErrorObject"
                examples:
                    Id mismatch:
                      value:
                        errors:
                          - status: '409'
                            code: error
                            detail: "The resource object's id (985ed9d7-b652-47b8-b9cf-c17d62735261) does not match url's lookup id (8209367f-691b-475e-84c3-d1c69f46075b)"
                            source:
                               pointer: /data
    Not_Found:
      description: Not Found
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ErrorObject"
          examples:
            User does not exist:
              $ref: "#/components/examples/user_does_not_exist"
  examples:
    forbidden:
      value:
        errors:
          - status: '403'
            title: Forbidden
            code: error.default
    user_does_not_exist:
      value:
        errors:
          - status: '404'
            title: "User with id: 6e82f3aa-43a3-45e8-8caf-b9db9503d795 does not exist"
            code: users.error.user-does-not-exist
    user_already_exists:
      value:
        errors:
          - status: '400'
            title: Invalid form
            detail: "User with email: 'example@piwik.pro' already exists."
            code: users.error.user-already-exists
            source:
              pointer: /email
    unsupported_language:
      value:
        errors:
          - status: '400'
            title: Invalid form
            code: users.error.unsupported-language
            detail: 'Language "pl" is not supported (supported are ca, de, en, es, fi, fr, nl, sv)'
            source:
              pointer: /language
    unsupported_language_tag:
      value:
        errors:
          - status: '400'
            title: Invalid form
            code: users.error.unsupported-language-tag
            detail: "Invalid language - use IETF language tag format - for example: 'en-US'"
            source:
              pointer: /language
    unsupported_language_region:
      value:
        errors:
          - status: '400'
            title: Invalid form
            code: users.error.unsupported-language
            detail: "Region code 'EN' is not supported - use valid ISO 3166-1 alpha-2 code"
            source:
              pointer: /language
    email_should_not_be_blank:
      value:
        errors:
          - status: '400'
            title: Invalid form
            code: error.not-blank
            detail: This value should not be blank.
            source:
              pointer: /email
    email_invalid_value:
      value:
        errors:
          - status: '400'
            title: Invalid form
            code: users.error.invalid-email
            detail: '"example.com" is not a valid email address.'
            source:
              pointer: /email
    email_invalid_type:
      value:
        errors:
          - status: '400'
            title: Invalid form
            code: error.default
            detail: This value is not valid.
            source:
              pointer: /email
    invalid_password_policy:
      value:
        errors:
          - status: '400'
            title: Invalid form
            code: users.error.invalid-new-password
            detail: Password is invalid. It must contain at least one numeric digit, one uppercase, and one lowercase letter
            source:
              pointer: /password
    invalid_role:
      value:
        errors:
          - status: '400'
            title: Invalid form
            code: users.error.invalid-role
            detail: 'Role "invalid_role" is not supported (supported are OWNER, USER)'
            source:
              pointer: /role
    invalid_json_api_type:
      value:
        errors:
          - status: '400'
            title: '"invalid/type" is not a valid resource type, use "ppms/user" instead'
            code: error.json-api-resource-type
    invalid_uuid:
      value:
        errors:
          - status: '400'
            title: '"example" is not a valid UUID.'
            code: error.default
    cannot_delete_last_owner:
      value:
        errors:
          - status: '400'
            title: Cannot delete last owner
            code: users.error.cannot-delete-last-owner
    cannot_delete_own_account:
      value:
        errors:
          - status: '400'
            title: User can't delete own account.
            code: users.error.cannot-delete-own-account
    cannot_change_own_role:
      value:
        errors:
          - status: '400'
            title: Cannot change own role
            code: users.error.cannot-change-own-role
    json_api_id_not_provided:
      value:
        errors:
          - status: '400'
            title: Resource id is not provided - make sure you have id field in request payload data object
            code: error.json-api-resource-id-not-provided
    invalid_current_password:
      value:
        errors:
          - status: '400'
            title: Invalid form
            code: users.error.invalid-current-password
            detail: This value should be the user's current password.
            source:
              pointer: /currentPassword
    invalid_current_password_type:
      value:
        errors:
          - status: '400'
            title: Invalid form
            code: error.default
            detail: This value is not valid.
            source:
              pointer: /currentPassword
    invalid_new_password:
      value:
        errors:
          - status: '400'
            title: Invalid form
            code: users.error.invalid-new-password
            detail: Password is invalid. It must contain at least one numeric digit, one uppercase, and one lowercase letter
            source:
              pointer: /newPassword
    invalid_content_type:
      value:
        errors:
          - status: '400'
            title: '"application/json" is not a valid JsonApi Content-Type header, use "application/vnd.api+json" instead'
            code: error.json-api-content-type
    invalid_json_api_content:
      value:
        errors:
          - status: '400'
            title: Invalid jsonapi message received
            code: error.default
    invalid_offset:
      value:
        errors:
          - status: '400'
            title: Invalid query parameter 'offset' - value should be a positive integer - got '-1'
            code: error.default
    invalid_limit:
      value:
        errors:
          - status: '400'
            title: Invalid query parameter 'limit' - value should be a positive integer - got '-1'
            code: error.default
    invalid_limit_over:
      value:
        errors:
          - status: '400'
            title: 'Limit parameter exceeded maximum "1000" value, "1001" given'
            code: error.default
    invalid_sort:
      value:
        errors:
          - status: '400'
            title: Invalid query parameter 'sort' - available options are [email,addedAt,role] - got 'example'
            code: error.default
    invalid_attributes:
      value:
        errors:
          - status: '400'
            title: "Invalid field 'attributes' - value should be an object - got 'int'"
            code: error.default