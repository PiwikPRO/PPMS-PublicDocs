swagger: '2.0'

info:
  title: User Groups API
  version: auto

host: example.piwik.pro

schemes: [https]

paths:
  /api/user-groups/v1:
    get:
      summary: List user groups
      description: Lists user groups
      operationId: list_user_group_v1
      produces:
        - application/vnd.api+json
      parameters:
        - $ref: '#/parameters/UserGroupsSearch'
        - $ref: '#/parameters/UserGroupsSort'
        - $ref: '#/parameters/UserGroupsLimit'
        - $ref: '#/parameters/Offset'
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/ListMetadata'
              data:
                type: array
                items:
                  $ref: '#/definitions/UserGroup'
        400:
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Forbidden

    post:
      summary: Add user group
      description: Adds user group with unique name
      operationId: add_user_group_v1
      produces:
        - application/vnd.api+json
      parameters:
        - name: Add user group
          in: body
          description: Request data to add new user group
          required: true
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/UserGroup'
      responses:
        201:
          description: Created
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/UserGroup'
        400:
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Forbidden


  /api/user-groups/v1/{user_group_id}:
    get:
      summary: Get user group
      description: Gets specific user group details
      operationId: UserGroupDetails_v1
      parameters:
        - $ref: '#/parameters/UserGroupId'
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/UserGroup'
        400:
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Forbidden

    patch:
      summary: Edit user group
      description: Updates user group details
      operationId: edit_user_group_v1
      consumes:
        - application/vnd.api+json
      parameters:
        - $ref: '#/parameters/UserGroupId'
        - name: Edit user group
          in: body
          required: true
          schema:
            type: object
            required:
              - data
            properties:
              data:
                allOf:
                  - $ref: '#/definitions/UserGroup'
                  - type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: UUID of edited user group (must match `user_group_id` parameter)
                        example: 9a67f188-734c-4ba3-8769-912a7e59f3ff
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Forbidden

    delete:
      summary: Delete user group
      description: Deletes user group
      operationId: delete_user_group_v1
      parameters:
        - $ref: '#/parameters/UserGroupId'
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Forbidden

  /api/user-groups/v1/{user_group_id}/users:
    get:
      summary: Get user group members
      description: Gets user group members
      operationId: list_user_group_users_v1
      produces:
        - application/vnd.api+json
      parameters:
        - $ref: '#/parameters/UserGroupId'
        - $ref: '#/parameters/UsersSearch'
        - $ref: '#/parameters/UsersSort'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/Offset'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UsersList'
        400:
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Forbidden

  /api/user-groups/v1/{user_group_id}/users/excluded:
    get:
      summary: Get users excluded from group
      description: Gets users excluded from given user group
      operationId: list_user_group_users_excluded_v1
      produces:
        - application/vnd.api+json
      parameters:
        - $ref: '#/parameters/UserGroupId'
        - $ref: '#/parameters/UsersSearch'
        - $ref: '#/parameters/UsersSort'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/Offset'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UsersList'
        400:
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Forbidden

  /api/user-groups/v1/{user_group_id}/relationships/users:
    post:
      summary: Add users to user group
      description: Adds users to user group
      operationId: add_users_to_group_v1
      consumes:
        - application/vnd.api+json
      parameters:
        - $ref: '#/parameters/UserGroupId'
        - name: Add users to user group
          in: body
          description: Request data to add users to user group
          required: true
          schema:
            $ref: '#/definitions/UserIdentifiersList'
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Forbidden

    delete:
      summary: Remove users from user group
      description: Remove users from user group
      operationId: remove_users_from_group_v1
      consumes:
        - application/vnd.api+json
      parameters:
        - $ref: '#/parameters/UserGroupId'
        - name: Remove users from user group
          in: body
          description: Request data to remove users from user group
          required: true
          schema:
            $ref: '#/definitions/UserIdentifiersList'
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Forbidden

  /api/user-groups/v1/{user_group_id}/permissions:
    post:
      deprecated: true
      summary: Set permission group
      description: Sets permission group to entity for user group
      operationId: set_permission_group_for_user_group_v1
      produces:
        - application/vnd.api+json
      parameters:
        - $ref: '#/parameters/UserGroupId'
        - name: Set permission group
          in: body
          description: Request data to set permission group for user group
          required: true
          schema:
            $ref: '#/definitions/SetPermissionGroup'
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Forbidden

definitions:
  Id:
    type: string
    format: uuid
    description: UUIDv4 identifier of an object
    example: 6edb1e3c-4c43-4760-ab76-682ad83146be

  PermissionGroup:
    type: string
    description: Permission group (for example `edit-publish` contains permissions `view`, `edit` and `publish`)
    enum:
      - no-access
      - view
      - edit
      - edit-publish
      - manage

  CreatedAt:
    type: string
    format: 'date-time'
    description: Timestamp of object's creation
    readOnly: true

  UpdatedAt:
    type: string
    format: 'date-time'
    description: Timestamp of object's last modification
    readOnly: true

  ListMetadata:
    type: object
    description: Metadata of a listing
    required:
      - total
    properties:
      total:
        type: integer
        description: Total number of items
        example: 1

  UserGroup:
    type: object
    required:
      - id
      - type
      - attributes
    properties:
      type:
        type: string
        enum: [ppms/user-group]
      id:
        allOf:
          - $ref: '#/definitions/Id'
          - readOnly: true
      attributes:
        type: object
        required:
          - name
          - created_at
          - updated_at
        properties:
          name:
            description: User group name
            type: string
            example: Managers
          created_at:
            allOf:
              - $ref: '#/definitions/CreatedAt'
              - readOnly: true
          updated_at:
            allOf:
              - $ref: '#/definitions/UpdatedAt'
              - readOnly: true

  UsersList:
    type: object
    properties:
      meta:
        $ref: '#/definitions/ListMetadata'
      data:
        type: array
        items:
          $ref: '#/definitions/User'

  User:
    type: object
    description: User details
    required:
      - id
      - type
      - attributes
    properties:
      id:
        $ref: '#/definitions/Id'
      type:
        type: string
        description: Resource type
        enum: [ppms/user]
      attributes:
        type: object
        required:
          - email
        properties:
          email:
            $ref: '#/definitions/Email'

  Email:
    type: string
    format: email
    description: User email
    example: example@example.com

  UserIdentifiersList:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/UserIdentifier'

  UserIdentifier:
    type: object
    properties:
      type:
        description: Resource type
        type: string
        enum: [ppms/user]
      id:
        $ref: '#/definitions/Id'

  SetPermissionGroup:
    type: object
    required:
      - data
    properties:
      data:
        type: object
        required:
          - type
          - attributes
        properties:
          type:
            description: Resource type
            type: string
            enum: [ppms/permissions/group]
          attributes:
            type: object
            required:
              - entity_id
              - group
            properties:
              entity_id:
                $ref: '#/definitions/Id'
              group:
                $ref: '#/definitions/PermissionGroup'

parameters:
  UserGroupId:
    in: path
    name: user_group_id
    type: string
    format: uuid
    required: true
    description: UUIDv4 identifier of given user group

  UserGroupsSearch:
    in: query
    name: search
    description: Search phrase - search for user group name and user group id
    type: string
    required: false

  UserGroupsSort:
    in: query
    name: sort
    description: Sort field - can be reversed by adding dash before field name e.g (-name)
    type: string
    default: name
    required: false
    enum:
      - name
      - created_at
      - updated_at
      - -name
      - -created_at
      - -updated_at

  UserGroupsLimit:
    in: query
    name: limit
    description: Limits the number of returned user groups in response
    default: 10
    type: integer
    maximum: 1000
    required: false

  UsersSearch:
    in: query
    name: search
    description: Search phrase for searching users by email or user id
    type: string
    required: false

  UsersSort:
    in: query
    name: sort
    description: Sort field - can be reversed by adding dash before field name e.g (-email)
    type: string
    default: email
    required: false
    enum:
      - email
      - -email

  Limit:
    in: query
    name: limit
    description: Limits the number of returned items
    default: 10
    type: string
    required: false

  Offset:
    in: query
    name: offset
    description: Sets offset for list of items
    default: 0
    type: integer
    minimum: 0
    required: false
