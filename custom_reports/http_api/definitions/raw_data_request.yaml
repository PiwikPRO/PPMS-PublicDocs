type: object
properties:
  website_id:
    type: string
    format: uuid
    description: ID of the website.
    example: 70236925-724f-404e-b634-7b5633bc0bcc
  columns:
    type: array
    description: |
      Definitions of additional columns that should be returned (timestamp and
      identifiers will be returned by default).
    items:
      type: object
      properties:
        column_id:
          type: string
          description: ID of the dimension column.
        transformation_id:
          type: string
          description: |
            Optional ID of the transformation. Must be supported by
            the column that was specified and must convert the column
            into another dimension (and not a metric).
      required:
        - column_id
    example: [{"column_id":"resolution"},{"column_id":"device_type"}]
  date_from:
    type: string
    format: date
    description: Start date for the query (inclusive). Cannot be used with relative_date field at
      the same time. Mandatory if ``relative_date`` is not used.
  date_to:
    type: string
    format: date
    description: End date for the query (inclusive). Cannot be used with ``relative_date`` field at
      the same time. Mandatory if ``relative_date`` is not used.
  relative_date:
    type: string
    enum:
      - today
      - yesterday
      - last_week
      - last_month
      - last_year
      - last_X_days
    description: Use relative date in query. Cannot be used with absolute date fields at
      the same time. ``X`` in ``last_X_days`` must be in range 1 <= ``X`` <= 365. Mandatory if
      absolute date fields are not used.
  filters:
    type: object
    description: |
      Dimension filters for the query. The top-level object must specify
      AND/OR clause, but any nested objects may either specify another AND/OR
      clause or a single filter.
    properties:
      operator:
        type: string
        description: Logical operator (AND/OR) for the clause.
        enum:
          - and
          - or
      conditions:
        type: array
        description: List of filters or recursively nested clauses.
        items:
          type: object
          required:
            - column_id
            - condition
          properties:
            column_id:
              type: string
              description: ID of the dimension column.
            transformation_id:
              type: string
              description: |
                Optional ID of the transformation. Must be supported by
                the column that was specified and must convert the column
                into another dimension (and not a metric).
            condition:
              type: object
              description: Definition of a the condition for this column.
              properties:
                operator:
                  type: string
                  description: |
                    Filtering operator. Available choices depend on
                    the specified column's type.

                    String operators: ``eq``, ``neq``,
                    ``contains``, ``not_contains``,
                    ``icontains``, ``not_icontains``,
                    ``starts_with``, ``ends_with``.

                    Numeric operators: ``eq``, ``neq``, ``gt``, ``gte``,
                    ``lt``, ``lte``.

                    Boolean operators: ``eq``, ``neq``.

                    Enum operators: ``eq``, ``neq``, ``empty``, ``not_empty``.
                value:
                  description: |
                    Value that should be matched by filter. Value type must
                    match the type of the specified column. For enumerated
                    fields, you must use the ID value.
              required:
                - operator
                - value
          example: {"column_id":"browser_name","condition":{"operator":"eq","value":"FF"}}
    required:
      - operator
      - conditions
  offset:
    type: integer
    default: 0
    minimum: 0
    description: Number of rows to skip before beginning to return rows.
  limit:
    type: integer
    default: 100
    minimum: 1
    maximum: 100000
    description: Number of rows to return.
  format:
    type: string
    enum:
      - json
      - json-kv
      - csv
    default: json
    description: |
      Data format of a successful response (error responses are always in json).
required:
  - website_id
  - columns
example:
  website_id: 70236925-724f-404e-b634-7b5633bc0bcc
  columns:
    - column_id: resolution
    - column_id: device_type
  date_from: '2020-02-10'
  date_to: '2020-02-10'
  filters:
    operator: and
    conditions:
      - column_id: browser_name
        condition:
          operator: eq
          value: FF
  offset: 0
  limit: 100
  format: json
